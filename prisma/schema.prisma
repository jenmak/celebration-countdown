// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(cuid())
  name            String
  image           String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  birthdays       Birthday[]       @relation("BirthdayOwner")
  collaborations  Collaboration[]
  sharedBirthdays SharedBirthday[]
  settings        UserSettings?
}

model UserSettings {
  id               String   @id @default(cuid())
  userId           String   @unique
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  notificationDays Int      @default(7)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Birthday {
  id            String           @id @default(cuid())
  name          String
  date          DateTime
  notes         String?
  owner         User             @relation("BirthdayOwner", fields: [ownerId], references: [id])
  ownerId       String
  sharedWith    SharedBirthday[]
  collaborators Collaboration[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model SharedBirthday {
  id         String   @id @default(cuid())
  birthday   Birthday @relation(fields: [birthdayId], references: [id])
  birthdayId String
  friend     User     @relation(fields: [friendId], references: [id])
  friendId   String
  createdAt  DateTime @default(now())

  @@unique([birthdayId, friendId])
}

model Collaboration {
  id         String   @id @default(cuid())
  birthday   Birthday @relation(fields: [birthdayId], references: [id])
  birthdayId String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  createdAt  DateTime @default(now())

  @@unique([birthdayId, userId])
}
